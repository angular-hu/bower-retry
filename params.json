{"name":"angular-hu-retry","tagline":"Support multiple $http requests retries - httpu.retry","body":"\r\n## httpu.retry\r\n\r\nFactory to create interceptors that retry the failed request based on some conditions\r\n\r\n### Installation\r\n\r\nGet it from [bower](http://bower.io/) or directly download it.\r\n\r\n```sh\r\nbower install --save angular-hu-retry\r\n```\r\n\r\nAdd the dependency in the HTML\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"bower_components/angular-hu-retry/retry.js\"></script>\r\n```\r\n\r\nAdd the `httpu.retry` dependency to your App Module\r\n\r\n```js\r\nangular.module('MyApp', ['httpu.retry']);\r\n```\r\n\r\nThe `huRetryInterceptorFactory` dependency is now available\r\n\r\n### Usage\r\n\r\n```js\r\nangular.module('MyApp')\r\n.run(function($http) {\r\n  //retry 3 times before giving up. (the original request + 3 retries = 4 request)\r\n  $http.get('http://myapi.com/things', {\r\n    retries: 3\r\n  });\r\n})\r\n//SIMPLE USAGE: retry everything\r\n.config(function($httpProvider) {\r\n  // Add a default interceptor instantiation\r\n  $httpProvider.interceptors.push(['huRetryInterceptorFactory', function(huRetryInterceptorFactory) {\r\n    return huRetryInterceptorFactory();\r\n  }]);\r\n})\r\n//MEDIUM USAGE: Retry with a 503 error.\r\n.config(function($httpProvider) {\r\n  $httpProvider.interceptors.push('retryOn503Interceptor');\r\n})\r\n.factory('retryOn503Interceptor', function(huRetryInterceptorFactory, $q, $timeout) {\r\n  //return an interceptor that specifies the conditions for retry\r\n  return huRetryInterceptorFactory({\r\n    //this func will be called when there are remaining request. i.e. `retries` field in the request config \r\n    //is still greater than 0.\r\n    //So, it's called when a retry is about to be performed, allowing you to cancel the retry\r\n    // Useful when you don't want to retry a request based on some rejection parameters\r\n    // Must return a promise resolving to a boolean, allowing you to perform an async operation before retrying,\r\n    // or a boolean which means the desire of retrying\r\n    shouldRetry: function(rejection) {\r\n      //rejection is the paramter passed to https://docs.angularjs.org/api/ng/service/$http responseError interceptor\r\n      if (rejection.status === 503) {\r\n        //If my api response is a 503 error, retry the after 2 secs\r\n        return $timeout(function() {\r\n            return true;\r\n          }, 2000);\r\n      } \r\n      return false;\r\n    }\r\n    //There is also another one config parameter to the factory, called `retryField`\r\n    //that allows you to specify the name of field to be looked in the config to determine\r\n    // how many retries are remaining. Defaults to 'retries'\r\n  });\r\n});\r\n```\r\n\r\n\r\n### Use cases\r\n\r\n* You have several retry strategies based on some backend specific errors\r\n\r\n## LICENSE\r\n\r\nThe MIT License ([MIT](LICENSE))\r\n\r\nCopyright (c) 2015 Telef√≥nica I+D - http://www.tid.es\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}